C51 COMPILER V9.60.0.0   SEG                                                               01/16/2022 16:31:43 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SEG
OBJECT MODULE PLACED IN .\Objects\SEG.obj
COMPILER INVOKED BY: D:\Program files\Keil\C51\BIN\C51.EXE SEG.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\SEG.lst) TABS(2) OBJECT(.\Objects\SEG.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          
   4          /*---------------------------------------
   5          SEG Tube
   6          ---------------------------------------*/
   7          unsigned char code SEGNum[] = {
   8              0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07,
   9              0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71,
  10              0x00}; // Make an Arry to save the one's complement of SEG
  11          
  12          unsigned char code SEGSign[] = {
  13              0x7F, 0xBF
  14          };
  15          
  16          /**
  17           * @brief ???????
  18           *
  19           * @param Location ????
  20           * @param Number ?????
  21           * @retval ?
  22           */
  23          void SEG(unsigned char Location, unsigned char Number)
  24          { // Use SEG Tube Show Setted Number
  25   1          P1 = ~(0x01 << (8 - Location));
  26   1          P0 = ~SEGNum[Number];
  27   1          Delay(1);
  28   1          P0 = 0xFF;
  29   1      }
  30          
  31          void SEGScan(unsigned int Data, char ScanMode)
  32          {
  33   1          unsigned char TempData[8];
  34   1          int count = 0;
  35   1          switch (ScanMode)
  36   1          {
  37   2          case 'l':
  38   2          case 'L':
  39   2          {
  40   3              TempData[0] = SEGNum[Data / 1000];
  41   3              TempData[1] = SEGNum[(Data % 1000) / 100];
  42   3              TempData[2] = SEGNum[((Data % 1000) % 100) / 10];
  43   3              TempData[3] = SEGNum[((Data % 1000) % 100) % 10];
  44   3              for (count = 0; count < 3 && TempData[count] == 0x3F; count++)
  45   3              {
  46   4                  TempData[count] = 0x00;
  47   4              }
  48   3              for (count = 1; count <= 4; count++)
  49   3              {
  50   4                  P1 = ~(0x01 << (8 - count));
  51   4                  P0 = ~TempData[count - 1];
  52   4                  Delay(1);
  53   4                  P0 = 0xFF;
  54   4              }
C51 COMPILER V9.60.0.0   SEG                                                               01/16/2022 16:31:43 PAGE 2   

  55   3              break;
  56   3          }
  57   2          case 'r':
  58   2          case 'R':
  59   2          {
  60   3              TempData[4] = SEGNum[Data / 1000];
  61   3              TempData[5] = SEGNum[(Data % 1000) / 100];
  62   3              TempData[6] = SEGNum[((Data % 1000) % 100) / 10];
  63   3              TempData[7] = SEGNum[((Data % 1000) % 100) % 10];
  64   3              for (count = 4; count < 7 && TempData[count] == 0x3F; count++)
  65   3              {
  66   4                  TempData[count] = 0x00;
  67   4              }
  68   3              for (count = 4; count <= 8; count++)
  69   3              {
  70   4                  P1 = ~(0x01 << (8 - count));
  71   4                  P0 = ~TempData[count - 1];
  72   4                  Delay(1);
  73   4                  P0 = 0xFF;
  74   4              }
  75   3              break;
  76   3          }
  77   2          case 'n':
  78   2          case 'N':
  79   2          {
  80   3              unsigned int Mode = 10;
  81   3              for (count = 7; count >= 0; count--)
  82   3              {
  83   4                  TempData[count] = SEGNum[Data % Mode];
  84   4                  Data = Data / 10;
  85   4              }
  86   3              for (count = 0; count < 4 && TempData[count] == 0x3F; count++)
  87   3              {
  88   4                  TempData[count] = 0x00;
  89   4              }
  90   3              for (count = 4; count < 7 && TempData[count] == 0x3F; count++)
  91   3              {
  92   4                  TempData[count] = 0x00;
  93   4              }
  94   3              for (count = 1; count <= 8; count++)
  95   3              {
  96   4                  P1 = ~(0x01 << (8 - count));
  97   4                  P0 = ~TempData[count - 1];
  98   4                  Delay(1);
  99   4                  P0 = 0xFF;
 100   4              }
 101   3              break;
 102   3          }
 103   2          }
 104   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    760    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
