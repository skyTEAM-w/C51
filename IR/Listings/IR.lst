C51 COMPILER V9.60.0.0   IR                                                                05/05/2022 18:09:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: D:\Program files\Keil\C51\BIN\C51.EXE IR.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\IR.lst) TABS(2) OBJECT(.\Objects\IR.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Timer0.h"
   3          #include "Int0.h"
   4          
   5          unsigned int IR_Time;   //时间
   6          unsigned char IR_State; //状态, 0->空闲, 1->等待, 2->接收与解码
   7          
   8          unsigned char IR_Data[4]; //数据缓存
   9          unsigned char IR_pData;
  10          
  11          unsigned char IR_DataFlag;   //数据结束标志
  12          unsigned char IR_RepeatFlag; //重复标志
  13          unsigned char IR_Address;    //地址码
  14          unsigned char IR_Command;    //命令
  15          
  16          void IR_Init(void)
  17          {
  18   1          Timer0_Init();
  19   1          Int0_Init();
  20   1      }
  21          
  22          unsigned char IR_GetDataFlag(void)
  23          {
  24   1          if (IR_DataFlag)
  25   1          {
  26   2              IR_DataFlag = 0;
  27   2              return 1;
  28   2          }
  29   1          return 0;
  30   1      }
  31          
  32          unsigned char IR_GetRepeatFlag(void)
  33          {
  34   1          if(IR_RepeatFlag)
  35   1          {
  36   2              IR_RepeatFlag = 0;
  37   2              return 1;
  38   2          }
  39   1          return 0;
  40   1      }
  41          
  42          unsigned char IR_GetCommand(void)
  43          {
  44   1          return IR_Command;
  45   1      }
  46          
  47          unsigned char IR_GetAddress(void)
  48          {
  49   1          return IR_Address;
  50   1      }
  51          
  52          void Int0_Rountine(void) interrupt 0
  53          {
  54   1          if (IR_State == 0)
C51 COMPILER V9.60.0.0   IR                                                                05/05/2022 18:09:19 PAGE 2   

  55   1          {
  56   2              Timer0_SetCounter(0);
  57   2              Timer0_Run(1);
  58   2              IR_State = 1;
  59   2          }
  60   1          else if (IR_State == 1)
  61   1          {
  62   2              IR_Time = Timer0_GetCounter();
  63   2              Timer0_SetCounter(0);
  64   2              if (IR_Time > 12442 - 500 && IR_Time < 12442 + 500)
  65   2              {
  66   3                  IR_State = 2; //解码数据状态
  67   3              }
  68   2              else if (IR_Time > 10368 - 500 && IR_Time < 10368 + 500)
  69   2              {
  70   3                  IR_RepeatFlag = 1;
  71   3                  Timer0_Run(0); //计算器停止
  72   3                  IR_State = 0;  //状态回0
  73   3              }
  74   2              else
  75   2              {
  76   3                  IR_State = 1;
  77   3              }
  78   2          }
  79   1          else if (IR_State == 2)
  80   1          {
  81   2              IR_Time = Timer0_GetCounter();
  82   2              Timer0_SetCounter(0);
  83   2              if (IR_Time > 1032 - 500 && IR_Time < 1032 + 500)
  84   2              {
  85   3                  IR_Data[IR_pData / 8] &= ~(0x01 << (IR_pData % 8));
  86   3                  IR_pData++;
  87   3              }
  88   2              else if (IR_Time > 2074 - 500 && IR_Time < 2074 + 500)
  89   2              {
  90   3                  IR_Data[IR_pData / 8] |= (0x01 << (IR_pData % 8));
  91   3                  IR_pData++;
  92   3              }
  93   2              else
  94   2              {
  95   3                  //接收错误
  96   3                  IR_pData = 0;
  97   3                  IR_State = 1;
  98   3              }
  99   2              //数据验证
 100   2              if (IR_pData >= 32)
 101   2              {
 102   3                  IR_pData = 0;
 103   3                  if ((IR_Data[0] == ~IR_Data[1]) && (IR_Data[2] == ~IR_Data[3]))
 104   3                  {
 105   4                      IR_Address = IR_Data[0];
 106   4                      IR_Command = IR_Data[2];
 107   4                      IR_DataFlag = 1;
 108   4                  }
 109   3                  Timer0_Run(0);
 110   3                  IR_State = 0;
 111   3              }
 112   2          }
 113   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.0.0   IR                                                                05/05/2022 18:09:19 PAGE 3   

   CODE SIZE        =    372    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
