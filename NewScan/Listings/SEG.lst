C51 COMPILER V9.60.0.0   SEG                                                               02/02/2022 14:44:09 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SEG
OBJECT MODULE PLACED IN .\Objects\SEG.obj
COMPILER INVOKED BY: D:\Program files\Keil\C51\BIN\C51.EXE SEG.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\SEG.lst) TABS(2) OBJECT(.\Objects\SEG.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          
   4          /*---------------------------------------
   5          SEG Tube
   6          ---------------------------------------*/
   7          
   8          // Make an Arry to save the one's complement of SEG
   9          unsigned char code SEG_Table[] = {
  10              0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07,
  11              0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71,
  12              0x00, 0x40}; 
  13          
  14          unsigned char code SEGSign[] = {
  15              0x7F, 0xBF};
  16          
  17          //数码管缓存区表
  18          unsigned char SEG_Buf[9] = {0, 16, 16, 16, 16, 16, 16, 16, 16};
  19          
  20          /**
  21           * @brief 缓存区设置函数
  22           * 
  23           * @param Location 显示位置
  24           * @param Number 数字
  25           */
  26          void SEG_SetBuf(unsigned char Location, unsigned char Number)
  27          {
  28   1          SEG_Buf[Location] = Number;
  29   1      }
  30          
  31          /**
  32           * @brief 数码管显示数字
  33           *
  34           * @param Location 显示位置
  35           * @param Number 显示的数字
  36           * @retval 无
  37           */
  38          void SEG(unsigned char Location, unsigned char Number)
  39          { // Use SEG Tube Show Setted Number
  40   1          P0 = 0xFF;
  41   1          P1 = ~(0x01 << (8 - Location));
  42   1          P0 = ~SEG_Table[Number];
  43   1          
  44   1      }
  45          
  46          /**
  47           * @brief 数码管扫描函数，最大可在数码管中显示0~65535范围内的整数。
  48           * 格式：右对齐
  49           *
  50           * @param Data 显示的数据 范围：
  51           * L_MODE与R_MODE：0~9999
  52           * N_MODE:0~65535
  53           * @param ScanMode 输出模式：
  54           * 'L''l'：左侧数码管输出
C51 COMPILER V9.60.0.0   SEG                                                               02/02/2022 14:44:09 PAGE 2   

  55           * 'R''r'：右侧数码管输出
  56           * 'N''n'：双侧数码管共同输出
  57           */
  58          void SEGScan(unsigned int Data, char ScanMode)
  59          {
  60   1          unsigned char TempData[8];
  61   1          int count = 0;
  62   1          switch (ScanMode)
  63   1          {
  64   2          case 'l':
  65   2          case 'L':
  66   2          {
  67   3              TempData[0] = SEG_Table[Data / 1000];
  68   3              TempData[1] = SEG_Table[(Data % 1000) / 100];
  69   3              TempData[2] = SEG_Table[((Data % 1000) % 100) / 10];
  70   3              TempData[3] = SEG_Table[((Data % 1000) % 100) % 10];
  71   3              for (count = 0; count < 3 && TempData[count] == 0x3F; count++)
  72   3              {
  73   4                  TempData[count] = 0x00;
  74   4              }
  75   3              for (count = 1; count <= 4; count++)
  76   3              {
  77   4                  P1 = ~(0x01 << (8 - count));
  78   4                  P0 = ~TempData[count - 1];
  79   4                  Delay(1);
  80   4                  P0 = 0xFF;
  81   4              }
  82   3              break;
  83   3          }
  84   2          case 'r':
  85   2          case 'R':
  86   2          {
  87   3              TempData[4] = SEG_Table[Data / 1000];
  88   3              TempData[5] = SEG_Table[(Data % 1000) / 100];
  89   3              TempData[6] = SEG_Table[((Data % 1000) % 100) / 10];
  90   3              TempData[7] = SEG_Table[((Data % 1000) % 100) % 10];
  91   3              for (count = 4; count < 7 && TempData[count] == 0x3F; count++)
  92   3              {
  93   4                  TempData[count] = 0x00;
  94   4              }
  95   3              for (count = 4; count <= 8; count++)
  96   3              {
  97   4                  P1 = ~(0x01 << (8 - count));
  98   4                  P0 = ~TempData[count - 1];
  99   4                  Delay(1);
 100   4                  P0 = 0xFF;
 101   4              }
 102   3              break;
 103   3          }
 104   2          case 'n':
 105   2          case 'N':
 106   2          {
 107   3              unsigned int Mode = 10;
 108   3              for (count = 7; count >= 0; count--)
 109   3              {
 110   4                  TempData[count] = SEG_Table[Data % Mode];
 111   4                  Data = Data / 10;
 112   4              }
 113   3              for (count = 0; count < 4 && TempData[count] == 0x3F; count++)
 114   3              {
 115   4                  TempData[count] = 0x00;
 116   4              }
C51 COMPILER V9.60.0.0   SEG                                                               02/02/2022 14:44:09 PAGE 3   

 117   3              for (count = 4; count < 7 && TempData[count] == 0x3F; count++)
 118   3              {
 119   4                  TempData[count] = 0x00;
 120   4              }
 121   3              for (count = 1; count <= 8; count++)
 122   3              {
 123   4                  P1 = ~(0x01 << (8 - count));
 124   4                  P0 = ~TempData[count - 1];
 125   4                  Delay(1);
 126   4                  P0 = 0xFF;
 127   4              }
 128   3              break;
 129   3          }
 130   2          }
 131   1      }
 132          
 133          /**
 134           * @brief 数码管定时器扫描函数
 135           * 
 136           */
 137          void SEG_Loop()
 138          {
 139   1          static unsigned char i = 1;
 140   1          SEG(i, SEG_Buf[i]);
 141   1          i++;
 142   1          if (i >= 9)
 143   1              i = 1;
 144   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    789    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
