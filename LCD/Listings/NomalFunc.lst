C51 COMPILER V9.60.0.0   NOMALFUNC                                                         01/11/2022 22:54:39 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE NOMALFUNC
OBJECT MODULE PLACED IN .\Objects\NomalFunc.obj
COMPILER INVOKED BY: D:\Program files\Keil\C51\BIN\C51.EXE ..\NomalFunc\NomalFunc.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\N
                    -omalFunc) DEBUG OBJECTEXTEND PRINT(.\Listings\NomalFunc.lst) TABS(2) OBJECT(.\Objects\NomalFunc.obj)

line level    source

   1          #include <REGX52.H>
   2          // #include <NomalFunc.h>
   3          
   4          /**
   5           * @brief 延时X毫秒
   6           * @param X_ms 延迟的毫秒数
   7           * @retval 无
   8           */
   9          void Delay(unsigned int X_ms) //@12.000MHz
  10          {
  11   1          unsigned char i, j;
  12   1          while (X_ms--)
  13   1          {
  14   2              /* code */
  15   2              i = 2;
  16   2              j = 239;
  17   2              do
  18   2              {
  19   3                  while (--j)
  20   3                      ;
  21   3              } while (--i);
  22   2          }
  23   1      }
  24          
  25          /*SEG View*/
  26          unsigned char code SEGNum[] = {
  27              0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07,
  28              0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71,
  29              0x00}; // Make an Arry to save the code of SEG
  30          
  31          /**
  32           * @brief 数码管显示数字
  33           * 
  34           * @param Location 显示位置 
  35           * @param Number 显示的数字
  36           */
  37          void SEGView(unsigned char Location, unsigned char Number)
  38          { //Use SEG Tube Show Setted Number
  39   1          P1 = ~(0x01 << (8 - Location));
  40   1          P0 = ~SEGNum[Number];
  41   1          Delay(1);
  42   1          P0 = 0xFF;
  43   1      }
  44          
  45          /*LCD1602*/
  46          //引脚配置：
  47          sbit LCD_RS = 0x90;
  48          sbit LCD_RW = 0x91;
  49          sbit LCD_EN = 0x92;
  50          #define LCD_DataPort P0
  51          
  52          //函数定义：
  53          /**
  54           * @brief  LCD1602延时函数，12MHz调用可延时1ms
C51 COMPILER V9.60.0.0   NOMALFUNC                                                         01/11/2022 22:54:39 PAGE 2   

  55           * @param  无
  56           * @retval 无
  57           */
  58          void LCD_Delay()
  59          {
  60   1          unsigned char i, j;
  61   1      
  62   1          i = 2;
  63   1          j = 239;
  64   1          do
  65   1          {
  66   2              while (--j)
  67   2                  ;
  68   2          } while (--i);
  69   1      }
  70          
  71          /**
  72           * @brief  LCD1602写命令
  73           * @param  Command 要写入的命令
  74           * @retval 无
  75           */
  76          void LCD_WriteCommand(unsigned char Command)
  77          {
  78   1          LCD_RS = 0;
  79   1          LCD_RW = 0;
  80   1          LCD_DataPort = Command;
  81   1          LCD_EN = 1;
  82   1          LCD_Delay();
  83   1          LCD_EN = 0;
  84   1          LCD_Delay();
  85   1      }
  86          
  87          /**
  88           * @brief  LCD1602写数据
  89           * @param  Data 要写入的数据
  90           * @retval 无
  91           */
  92          void LCD_WriteData(unsigned char Data)
  93          {
  94   1          LCD_RS = 1;
  95   1          LCD_RW = 0;
  96   1          LCD_DataPort = Data;
  97   1          LCD_EN = 1;
  98   1          LCD_Delay();
  99   1          LCD_EN = 0;
 100   1          LCD_Delay();
 101   1      }
 102          
 103          /**
 104           * @brief  LCD1602设置光标位置
 105           * @param  Line 行位置，范围：1~2
 106           * @param  Column 列位置，范围：1~16
 107           * @retval 无
 108           */
 109          void LCD_SetCursor(unsigned char Line, unsigned char Column)
 110          {
 111   1          if (Line == 1)
 112   1          {
 113   2              LCD_WriteCommand(0x80 | (Column - 1));
 114   2          }
 115   1          else if (Line == 2)
 116   1          {
C51 COMPILER V9.60.0.0   NOMALFUNC                                                         01/11/2022 22:54:39 PAGE 3   

 117   2              LCD_WriteCommand(0x80 | (Column - 1 + 0x40));
 118   2          }
 119   1      }
 120          
 121          /**
 122           * @brief  LCD1602初始化函数
 123           * @param  无
 124           * @retval 无
 125           */
 126          void LCD_Init()
 127          {
 128   1          LCD_WriteCommand(0x38); //八位数据接口，两行显示，5*7点阵
 129   1          LCD_WriteCommand(0x0c); //显示开，光标关，闪烁关
 130   1          LCD_WriteCommand(0x06); //数据读写操作后，光标自动加一，画面不动
 131   1          LCD_WriteCommand(0x01); //光标复位，清屏
 132   1      }
 133          
 134          /**
 135           * @brief  在LCD1602指定位置上显示一个字符
 136           * @param  Line 行位置，范围：1~2
 137           * @param  Column 列位置，范围：1~16
 138           * @param  Char 要显示的字符
 139           * @retval 无
 140           */
 141          void LCD_ShowChar(unsigned char Line, unsigned char Column, char Char)
 142          {
 143   1          LCD_SetCursor(Line, Column);
 144   1          LCD_WriteData(Char);
 145   1      }
 146          
 147          /**
 148           * @brief  在LCD1602指定位置开始显示所给字符串
 149           * @param  Line 起始行位置，范围：1~2
 150           * @param  Column 起始列位置，范围：1~16
 151           * @param  String 要显示的字符串
 152           * @retval 无
 153           */
 154          void LCD_ShowString(unsigned char Line, unsigned char Column, char *String)
 155          {
 156   1          unsigned char i;
 157   1          LCD_SetCursor(Line, Column);
 158   1          for (i = 0; String[i] != '\0'; i++)
 159   1          {
 160   2              LCD_WriteData(String[i]);
 161   2          }
 162   1      }
 163          
 164          /**
 165           * @brief  返回值=X的Y次方
 166           */
 167          int LCD_Pow(int X, int Y)
 168          {
 169   1          unsigned char i;
 170   1          int Result = 1;
 171   1          for (i = 0; i < Y; i++)
 172   1          {
 173   2              Result *= X;
 174   2          }
 175   1          return Result;
 176   1      }
 177          
 178          /**
C51 COMPILER V9.60.0.0   NOMALFUNC                                                         01/11/2022 22:54:39 PAGE 4   

 179           * @brief  在LCD1602指定位置开始显示所给数字
 180           * @param  Line 起始行位置，范围：1~2
 181           * @param  Column 起始列位置，范围：1~16
 182           * @param  Number 要显示的数字，范围：0~65535
 183           * @param  Length 要显示数字的长度，范围：1~5
 184           * @retval 无
 185           */
 186          void LCD_ShowNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 187          {
 188   1          unsigned char i;
 189   1          LCD_SetCursor(Line, Column);
 190   1          for (i = Length; i > 0; i--)
 191   1          {
 192   2              LCD_WriteData(Number / LCD_Pow(10, i - 1) % 10 + '0');
 193   2          }
 194   1      }
 195          
 196          /**
 197           * @brief  在LCD1602指定位置开始以有符号十进制显示所给数字
 198           * @param  Line 起始行位置，范围：1~2
 199           * @param  Column 起始列位置，范围：1~16
 200           * @param  Number 要显示的数字，范围：-32768~32767
 201           * @param  Length 要显示数字的长度，范围：1~5
 202           * @retval 无
 203           */
 204          void LCD_ShowSignedNum(unsigned char Line, unsigned char Column, int Number, unsigned char Length)
 205          {
 206   1          unsigned char i;
 207   1          unsigned int Number1;
 208   1          LCD_SetCursor(Line, Column);
 209   1          if (Number >= 0)
 210   1          {
 211   2              LCD_WriteData('+');
 212   2              Number1 = Number;
 213   2          }
 214   1          else
 215   1          {
 216   2              LCD_WriteData('-');
 217   2              Number1 = -Number;
 218   2          }
 219   1          for (i = Length; i > 0; i--)
 220   1          {
 221   2              LCD_WriteData(Number1 / LCD_Pow(10, i - 1) % 10 + '0');
 222   2          }
 223   1      }
 224          
 225          /**
 226           * @brief  在LCD1602指定位置开始以十六进制显示所给数字
 227           * @param  Line 起始行位置，范围：1~2
 228           * @param  Column 起始列位置，范围：1~16
 229           * @param  Number 要显示的数字，范围：0~0xFFFF
 230           * @param  Length 要显示数字的长度，范围：1~4
 231           * @retval 无
 232           */
 233          void LCD_ShowHexNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 234          {
 235   1          unsigned char i, SingleNumber;
 236   1          LCD_SetCursor(Line, Column);
 237   1          for (i = Length; i > 0; i--)
 238   1          {
 239   2              SingleNumber = Number / LCD_Pow(16, i - 1) % 16;
 240   2              if (SingleNumber < 10)
C51 COMPILER V9.60.0.0   NOMALFUNC                                                         01/11/2022 22:54:39 PAGE 5   

 241   2              {
 242   3                  LCD_WriteData(SingleNumber + '0');
 243   3              }
 244   2              else
 245   2              {
 246   3                  LCD_WriteData(SingleNumber - 10 + 'A');
 247   3              }
 248   2          }
 249   1      }
 250          
 251          /**
 252           * @brief  在LCD1602指定位置开始以二进制显示所给数字
 253           * @param  Line 起始行位置，范围：1~2
 254           * @param  Column 起始列位置，范围：1~16
 255           * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111
 256           * @param  Length 要显示数字的长度，范围：1~16
 257           * @retval 无
 258           */
 259          void LCD_ShowBinNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 260          {
 261   1          unsigned char i;
 262   1          LCD_SetCursor(Line, Column);
 263   1          for (i = Length; i > 0; i--)
 264   1          {
 265   2              LCD_WriteData(Number / LCD_Pow(2, i - 1) % 2 + '0');
 266   2          }
 267   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    503    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
