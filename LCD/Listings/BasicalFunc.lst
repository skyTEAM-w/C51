C51 COMPILER V9.60.0.0   BASICALFUNC                                                       01/11/2022 23:15:42 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BASICALFUNC
OBJECT MODULE PLACED IN .\Objects\BasicalFunc.obj
COMPILER INVOKED BY: D:\Program files\Keil\C51\BIN\C51.EXE ..\BasicalFunc\BasicalFunc.c OPTIMIZE(8,SPEED) BROWSE INCDIR(
                    -..\BasicalFunc) DEBUG OBJECTEXTEND PRINT(.\Listings\BasicalFunc.lst) TABS(2) OBJECT(.\Objects\BasicalFunc.obj)

line level    source

   1          /**
   2           * @file BasicalFunc.c
   3           * @author WuChengpei_Sky (w2563070231@outlook.com)
   4           * @brief 人人卓越工程51单片机常用基本函数库的实现
   5           * @version 1.0
   6           * @date 2022-01-11
   7           * 
   8           * @copyright Copyright (c) 2022
   9           * 
  10           */
  11          
  12          #include <REGX52.H>
  13          // #include <NomalFunc.h>
  14          
  15          /**
  16           * @brief 延时X毫秒
  17           * 
  18           * @param X_ms 延迟的毫秒数
  19           * @retval 无
  20           */
  21          void Delay(unsigned int X_ms) //@12.000MHz
  22          {
  23   1          unsigned char i, j;
  24   1          while (X_ms--)
  25   1          {
  26   2              /* code */
  27   2              i = 2;
  28   2              j = 239;
  29   2              do
  30   2              {
  31   3                  while (--j)
  32   3                      ;
  33   3              } while (--i);
  34   2          }
  35   1      }
  36          
  37          /*SEG View*/
  38          unsigned char code SEGNum[] = {
  39              0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07,
  40              0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71,
  41              0x00}; // Make an Arry to save the one's complement of SEG
  42          
  43          /**
  44           * @brief 数码管显示数字
  45           * 
  46           * @param Location 显示位置 
  47           * @param Number 显示的数字
  48           * @retval 无
  49           */
  50          void SEGView(unsigned char Location, unsigned char Number)
  51          { //Use SEG Tube Show Setted Number
  52   1          P1 = ~(0x01 << (8 - Location));
  53   1          P0 = ~SEGNum[Number];
  54   1          Delay(1);
C51 COMPILER V9.60.0.0   BASICALFUNC                                                       01/11/2022 23:15:42 PAGE 2   

  55   1          P0 = 0xFF;
  56   1      }
  57          
  58          /*LCD1602*/
  59          //引脚配置：
  60          sbit LCD_RS = 0x90;
  61          sbit LCD_RW = 0x91;
  62          sbit LCD_EN = 0x92;
  63          #define LCD_DataPort P0
  64          
  65          //函数定义：
  66          /**
  67           * @brief  LCD1602延时函数，12MHz调用可延时1ms
  68           * @param  无
  69           * @retval 无
  70           */
  71          void LCD_Delay()
  72          {
  73   1          unsigned char i, j;
  74   1      
  75   1          i = 2;
  76   1          j = 239;
  77   1          do
  78   1          {
  79   2              while (--j)
  80   2                  ;
  81   2          } while (--i);
  82   1      }
  83          
  84          /**
  85           * @brief  LCD1602写命令
  86           * @param  Command 要写入的命令
  87           * @retval 无
  88           */
  89          void LCD_WriteCommand(unsigned char Command)
  90          {
  91   1          LCD_RS = 0;
  92   1          LCD_RW = 0;
  93   1          LCD_DataPort = Command;
  94   1          LCD_EN = 1;
  95   1          LCD_Delay();
  96   1          LCD_EN = 0;
  97   1          LCD_Delay();
  98   1      }
  99          
 100          /**
 101           * @brief  LCD1602写数据
 102           * @param  Data 要写入的数据
 103           * @retval 无
 104           */
 105          void LCD_WriteData(unsigned char Data)
 106          {
 107   1          LCD_RS = 1;
 108   1          LCD_RW = 0;
 109   1          LCD_DataPort = Data;
 110   1          LCD_EN = 1;
 111   1          LCD_Delay();
 112   1          LCD_EN = 0;
 113   1          LCD_Delay();
 114   1      }
 115          
 116          /**
C51 COMPILER V9.60.0.0   BASICALFUNC                                                       01/11/2022 23:15:42 PAGE 3   

 117           * @brief  LCD1602设置光标位置
 118           * @param  Line 行位置，范围：1~2
 119           * @param  Column 列位置，范围：1~16
 120           * @retval 无
 121           */
 122          void LCD_SetCursor(unsigned char Line, unsigned char Column)
 123          {
 124   1          if (Line == 1)
 125   1          {
 126   2              LCD_WriteCommand(0x80 | (Column - 1));
 127   2          }
 128   1          else if (Line == 2)
 129   1          {
 130   2              LCD_WriteCommand(0x80 | (Column - 1 + 0x40));
 131   2          }
 132   1      }
 133          
 134          /**
 135           * @brief  LCD1602初始化函数
 136           * @param  无
 137           * @retval 无
 138           */
 139          void LCD_Init()
 140          {
 141   1          LCD_WriteCommand(0x38); //八位数据接口，两行显示，5*7点阵
 142   1          LCD_WriteCommand(0x0c); //显示开，光标关，闪烁关
 143   1          LCD_WriteCommand(0x06); //数据读写操作后，光标自动加一，画面不动
 144   1          LCD_WriteCommand(0x01); //光标复位，清屏
 145   1      }
 146          
 147          /**
 148           * @brief  在LCD1602指定位置上显示一个字符
 149           * @param  Line 行位置，范围：1~2
 150           * @param  Column 列位置，范围：1~16
 151           * @param  Char 要显示的字符
 152           * @retval 无
 153           */
 154          void LCD_ShowChar(unsigned char Line, unsigned char Column, char Char)
 155          {
 156   1          LCD_SetCursor(Line, Column);
 157   1          LCD_WriteData(Char);
 158   1      }
 159          
 160          /**
 161           * @brief  在LCD1602指定位置开始显示所给字符串
 162           * @param  Line 起始行位置，范围：1~2
 163           * @param  Column 起始列位置，范围：1~16
 164           * @param  String 要显示的字符串
 165           * @retval 无
 166           */
 167          void LCD_ShowString(unsigned char Line, unsigned char Column, char *String)
 168          {
 169   1          unsigned char i;
 170   1          LCD_SetCursor(Line, Column);
 171   1          for (i = 0; String[i] != '\0'; i++)
 172   1          {
 173   2              LCD_WriteData(String[i]);
 174   2          }
 175   1      }
 176          
 177          /**
 178           * @brief  返回值=X的Y次方
C51 COMPILER V9.60.0.0   BASICALFUNC                                                       01/11/2022 23:15:42 PAGE 4   

 179           */
 180          int LCD_Pow(int X, int Y)
 181          {
 182   1          unsigned char i;
 183   1          int Result = 1;
 184   1          for (i = 0; i < Y; i++)
 185   1          {
 186   2              Result *= X;
 187   2          }
 188   1          return Result;
 189   1      }
 190          
 191          /**
 192           * @brief  在LCD1602指定位置开始显示所给数字
 193           * @param  Line 起始行位置，范围：1~2
 194           * @param  Column 起始列位置，范围：1~16
 195           * @param  Number 要显示的数字，范围：0~65535
 196           * @param  Length 要显示数字的长度，范围：1~5
 197           * @retval 无
 198           */
 199          void LCD_ShowNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 200          {
 201   1          unsigned char i;
 202   1          LCD_SetCursor(Line, Column);
 203   1          for (i = Length; i > 0; i--)
 204   1          {
 205   2              LCD_WriteData(Number / LCD_Pow(10, i - 1) % 10 + '0');
 206   2          }
 207   1      }
 208          
 209          /**
 210           * @brief  在LCD1602指定位置开始以有符号十进制显示所给数字
 211           * @param  Line 起始行位置，范围：1~2
 212           * @param  Column 起始列位置，范围：1~16
 213           * @param  Number 要显示的数字，范围：-32768~32767
 214           * @param  Length 要显示数字的长度，范围：1~5
 215           * @retval 无
 216           */
 217          void LCD_ShowSignedNum(unsigned char Line, unsigned char Column, int Number, unsigned char Length)
 218          {
 219   1          unsigned char i;
 220   1          unsigned int Number1;
 221   1          LCD_SetCursor(Line, Column);
 222   1          if (Number >= 0)
 223   1          {
 224   2              LCD_WriteData('+');
 225   2              Number1 = Number;
 226   2          }
 227   1          else
 228   1          {
 229   2              LCD_WriteData('-');
 230   2              Number1 = -Number;
 231   2          }
 232   1          for (i = Length; i > 0; i--)
 233   1          {
 234   2              LCD_WriteData(Number1 / LCD_Pow(10, i - 1) % 10 + '0');
 235   2          }
 236   1      }
 237          
 238          /**
 239           * @brief  在LCD1602指定位置开始以十六进制显示所给数字
 240           * @param  Line 起始行位置，范围：1~2
C51 COMPILER V9.60.0.0   BASICALFUNC                                                       01/11/2022 23:15:42 PAGE 5   

 241           * @param  Column 起始列位置，范围：1~16
 242           * @param  Number 要显示的数字，范围：0~0xFFFF
 243           * @param  Length 要显示数字的长度，范围：1~4
 244           * @retval 无
 245           */
 246          void LCD_ShowHexNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 247          {
 248   1          unsigned char i, SingleNumber;
 249   1          LCD_SetCursor(Line, Column);
 250   1          for (i = Length; i > 0; i--)
 251   1          {
 252   2              SingleNumber = Number / LCD_Pow(16, i - 1) % 16;
 253   2              if (SingleNumber < 10)
 254   2              {
 255   3                  LCD_WriteData(SingleNumber + '0');
 256   3              }
 257   2              else
 258   2              {
 259   3                  LCD_WriteData(SingleNumber - 10 + 'A');
 260   3              }
 261   2          }
 262   1      }
 263          
 264          /**
 265           * @brief  在LCD1602指定位置开始以二进制显示所给数字
 266           * @param  Line 起始行位置，范围：1~2
 267           * @param  Column 起始列位置，范围：1~16
 268           * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111
 269           * @param  Length 要显示数字的长度，范围：1~16
 270           * @retval 无
 271           */
 272          void LCD_ShowBinNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 273          {
 274   1          unsigned char i;
 275   1          LCD_SetCursor(Line, Column);
 276   1          for (i = Length; i > 0; i--)
 277   1          {
 278   2              LCD_WriteData(Number / LCD_Pow(2, i - 1) % 2 + '0');
 279   2          }
 280   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    503    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
