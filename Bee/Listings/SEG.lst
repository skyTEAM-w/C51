C51 COMPILER V9.60.0.0   SEG                                                               01/25/2022 14:34:50 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SEG
OBJECT MODULE PLACED IN .\Objects\SEG.obj
COMPILER INVOKED BY: D:\Program files\Keil\C51\BIN\C51.EXE SEG.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\SEG.lst) TABS(2) OBJECT(.\Objects\SEG.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          
   4          /*---------------------------------------
   5          SEG Tube
   6          ---------------------------------------*/
   7          unsigned char code SEGNum[] = {
   8              0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07,
   9              0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71,
  10              0x00}; // Make an Arry to save the one's complement of SEG
  11          
  12          unsigned char code SEGSign[] = {
  13              0x7F, 0xBF
  14          };
  15          
  16          /**
  17           * @brief 数码管显示数字
  18           *
  19           * @param Location 显示位置
  20           * @param Number 显示的数字
  21           * @retval 无
  22           */
  23          void SEG(unsigned char Location, unsigned char Number)
  24          { // Use SEG Tube Show Setted Number
  25   1          P1 = ~(0x01 << (8 - Location));
  26   1          P0 = ~SEGNum[Number];
  27   1          Delay(1);
  28   1          P0 = 0xFF;
  29   1      }
  30          
  31          /**
  32           * @brief 数码管扫描函数，最大可在数码管中显示0~65535范围内的整数。
  33           * 格式：右对齐
  34           * 
  35           * @param Data 显示的数据 范围：
  36           * L_MODE与R_MODE：0~9999
  37           * N_MODE:0~65535
  38           * @param ScanMode 输出模式：
  39           * 'L''l'：左侧数码管输出
  40           * 'R''r'：右侧数码管输出
  41           * 'N''n'：双侧数码管共同输出
  42           */
  43          void SEGScan(unsigned int Data, char ScanMode)
  44          {
  45   1          unsigned char TempData[8];
  46   1          int count = 0;
  47   1          switch (ScanMode)
  48   1          {
  49   2          case 'l':
  50   2          case 'L':
  51   2          {
  52   3              TempData[0] = SEGNum[Data / 1000];
  53   3              TempData[1] = SEGNum[(Data % 1000) / 100];
  54   3              TempData[2] = SEGNum[((Data % 1000) % 100) / 10];
C51 COMPILER V9.60.0.0   SEG                                                               01/25/2022 14:34:50 PAGE 2   

  55   3              TempData[3] = SEGNum[((Data % 1000) % 100) % 10];
  56   3              for (count = 0; count < 3 && TempData[count] == 0x3F; count++)
  57   3              {
  58   4                  TempData[count] = 0x00;
  59   4              }
  60   3              for (count = 1; count <= 4; count++)
  61   3              {
  62   4                  P1 = ~(0x01 << (8 - count));
  63   4                  P0 = ~TempData[count - 1];
  64   4                  Delay(1);
  65   4                  P0 = 0xFF;
  66   4              }
  67   3              break;
  68   3          }
  69   2          case 'r':
  70   2          case 'R':
  71   2          {
  72   3              TempData[4] = SEGNum[Data / 1000];
  73   3              TempData[5] = SEGNum[(Data % 1000) / 100];
  74   3              TempData[6] = SEGNum[((Data % 1000) % 100) / 10];
  75   3              TempData[7] = SEGNum[((Data % 1000) % 100) % 10];
  76   3              for (count = 4; count < 7 && TempData[count] == 0x3F; count++)
  77   3              {
  78   4                  TempData[count] = 0x00;
  79   4              }
  80   3              for (count = 4; count <= 8; count++)
  81   3              {
  82   4                  P1 = ~(0x01 << (8 - count));
  83   4                  P0 = ~TempData[count - 1];
  84   4                  Delay(1);
  85   4                  P0 = 0xFF;
  86   4              }
  87   3              break;
  88   3          }
  89   2          case 'n':
  90   2          case 'N':
  91   2          {
  92   3              unsigned int Mode = 10;
  93   3              for (count = 7; count >= 0; count--)
  94   3              {
  95   4                  TempData[count] = SEGNum[Data % Mode];
  96   4                  Data = Data / 10;
  97   4              }
  98   3              for (count = 0; count < 4 && TempData[count] == 0x3F; count++)
  99   3              {
 100   4                  TempData[count] = 0x00;
 101   4              }
 102   3              for (count = 4; count < 7 && TempData[count] == 0x3F; count++)
 103   3              {
 104   4                  TempData[count] = 0x00;
 105   4              }
 106   3              for (count = 1; count <= 8; count++)
 107   3              {
 108   4                  P1 = ~(0x01 << (8 - count));
 109   4                  P0 = ~TempData[count - 1];
 110   4                  Delay(1);
 111   4                  P0 = 0xFF;
 112   4              }
 113   3              break;
 114   3          }
 115   2          }
 116   1      }
C51 COMPILER V9.60.0.0   SEG                                                               01/25/2022 14:34:50 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    760    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
